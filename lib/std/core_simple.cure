# Cure Standard Library - Core Module (Simplified)
# Basic types and operations

module Std.Core do
  export [
    # Boolean operations  
    not/1, and/2, or/2, xor/2,
    # Comparison operations
    eq/2, ne/2, lt/2, le/2, gt/2, ge/2,
    min/2, max/2, clamp/3,
    # Utility functions
    identity/1
  ]

  # Type definitions  
  type Result(T, E) = Ok(T) | Error(E)
  type Option(T) = Some(T) | None

  # Identity function
  def identity(x: T): T = x

  # Boolean operations
  def not(x: Bool): Bool =
    if x then false else true end

  def and(x: Bool, y: Bool): Bool =
    if x then y else false end

  def or(x: Bool, y: Bool): Bool =
    if x then true else y end

  def xor(x: Bool, y: Bool): Bool =
    if x then
      if y then false else true end
    else y end

  # Comparison operations for Int type
  def eq(x: Int, y: Int): Bool = x == y
  def ne(x: Int, y: Int): Bool = x != y
  def lt(x: Int, y: Int): Bool = x < y
  def le(x: Int, y: Int): Bool = x <= y
  def gt(x: Int, y: Int): Bool = x > y
  def ge(x: Int, y: Int): Bool = x >= y

  def min(x: Int, y: Int): Int =
    if x <= y then x else y end

  def max(x: Int, y: Int): Int =
    if x >= y then x else y end

  def clamp(value: Int, min_val: Int, max_val: Int): Int =
    min(max(value, min_val), max_val)
end
