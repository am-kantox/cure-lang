module Std.Option do
  export [
    # Option types (simplified)
    some/1, none/0,
    
    # Option operations
    is_some/1, is_none/1,
    get_or_default/2,
    map_option/2
  ]

  # Simplified Option implementation using integers
  # 0 = None, positive = Some(value)
  
  def some(value: Int): Int =
    "Create Some value (simplified)"
    if value <= 0 then 1 else value end  # Ensure positive

  def none(): Int =
    "Create None value (simplified)"
    0

  def is_some(option: Int): Bool =
    "Check if option is Some"
    option > 0

  def is_none(option: Int): Bool =
    "Check if option is None"
    option == 0

  def get_or_default(option: Int, default: Int): Int =
    "Get option value or return default"
    if is_some(option) then option else default end

  def map_option(option: Int, f: Int -> Int): Int =
    "Map function over option"
    if is_some(option) then some(f(option)) else none() end

end