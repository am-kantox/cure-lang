# Comprehensive test for monadic pipe operator
# The pipe operator |> should automatically wrap the first argument with ok()
# and chain operations monadically

module MonadicPipeTest do
  export [main/0, double/1, add_one/1, safe_divide/2, safe_increment/1]

  def main(): Int =
    let _ = print("Testing monadic pipe operator...")
    
    # Test 1: Simple monadic pipe - should work
    let result1 = 5 |> double
    let _ = print("Test 1 - Simple pipe done")
    
    # Test 2: Check what happens with regular Result functions
    let result2 = ok(10) |> safe_increment
    let _ = print("Test 2 - Result to Result function done")
    
    42
    
  # Helper functions
  def double(x: Int): Int =
    x * 2
    
  def add_one(x: Int): Int =
    x + 1
    
  def safe_divide(a: Int, b: Int) =
    if b == 0 then
      error("Division by zero")
    else
      ok(a / b)
    end
    
  def safe_increment(x: Int) =
    ok(x + 1)
end
