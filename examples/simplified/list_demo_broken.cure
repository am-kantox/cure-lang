module ListDemo do
  export [demo_all/0]
  
  import Std [List]
  import Std.List [fold]
  
  def demo_all(): Int =
    # Test Std.List.fold - sum a list
    let numbers = [1, 2, 3, 4, 5]
    let sum = fold(numbers, 0, add_curried)
    sum
  
  def sum_demo(): Int =
    let numbers = [1, 2, 3, 4, 5]
    fold(numbers, 0, add_curried)

  def product_demo(): Int =
    let numbers = [2, 3, 4]
    fold(numbers, 1, multiply_curried)

  def max_demo(): Int =
    let numbers = [3, 1, 4, 1, 5, 9, 2, 6]
    fold(numbers, 0, max_curried)

  def count_demo(): Int =
    let numbers = [10, 20, 30, 40, 50]
    fold(numbers, 0, count_curried)

  # Curried helper functions
  def add_curried(x: Int): Int -> Int = fn(y) -> x + y end
  def multiply_curried(x: Int): Int -> Int = fn(y) -> x * y end
  def max_curried(x: Int): Int -> Int = fn(y) -> if x > y then x else y end
  def count_curried(x: Int): Int -> Int = fn(y) -> y + 1 end

end
