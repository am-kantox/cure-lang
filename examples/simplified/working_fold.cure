module WorkingFold do
  export [test_fold/0]
  
  # Test our working fold implementation
  def test_fold(): Int =
    fold_alt([1, 2, 3], 0, add_func)
    
  def add_func(x: Int): Int -> Int = 
    fn(acc) -> x + acc end
  
  # Alternative fold implementation using built-in list functions if available
  # or a different approach to avoid the broken pattern matching
  def fold_alt(list: List(T), init: U, func: T -> U -> U): U =
    # For now, let's try a very simple approach
    # We know that [] matches correctly, and we can check if a list is empty
    match list do
      [] -> init
      _ -> 
        # If we can't use [h|t] pattern, we need to use other methods
        # This is a placeholder - we'll need to find another way
        init  # Temporary fallback
    end
    
end