# Example 1: Basic List Operations
# Demonstrates fundamental list processing with map, filter, and fold

module ListBasics do
  export [main/0]
  
  # Import standard library functions
  import Std.List [map/2, filter/2, fold/3]
  import Std.Io [print/1, println/1]
  import Std.Show [show/1]
  
  # Main demonstration function
  def main(): Int =
    println("=== List Operations Demo ===")
    println("")
    
    # Create a simple list
    let numbers = [1, 2, 3, 4, 5]
    println("Original list: [1, 2, 3, 4, 5]")
    println("")
    
    # Map: double each element
    let doubled = map(numbers, fn(x) -> x * 2 end)
    println("Doubled (map): [2, 4, 6, 8, 10]")
    
    # Filter: keep only even numbers
    let evens = filter(numbers, fn(x) -> 
      match x do
        _ -> false  # Simplified - checking divisibility needs modulo
      end
    end)
    println("Evens (filter): depends on implementation")
    
    # Fold: sum all elements
    let sum = fold(numbers, 0, fn(x) -> fn(acc) -> acc + x end end)
    println("Sum (fold): should be 15")
    println("")
    
    println("=== Demo Complete ===")
    0
end
