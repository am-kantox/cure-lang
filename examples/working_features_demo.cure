# Working Features of the Monadic Pipe Operator
# This shows what currently works with the implementation

module WorkingFeaturesDemo do
  export [main/0, double/1, safe_increment/1]

  def main(): Int =
    let _ = print("=== Working Monadic Pipe Features ===")
    
    # âœ… WORKING: Simple monadic pipe with regular function
    let _ = print("\\nâœ… Feature 1: Simple monadic pipe")
    let _ = print("5 |> double")
    let result1 = 5 |> double
    # result1 is {'Ok', 10}
    
    # âœ… WORKING: Starting with existing Result and Result-returning function  
    let _ = print("\\nâœ… Feature 2: Result to Result function")
    let _ = print("ok(10) |> safe_increment")
    let result2 = ok(10) |> safe_increment  
    # result2 is {'Ok', 11}
    
    # âœ… WORKING: Error propagation
    let _ = print("\\nâœ… Feature 3: Error propagation")
    let _ = print("error('test') |> double")
    let result3 = error("test") |> double
    # result3 is {'Error', 'test'} - double is not called
    
    let _ = print("\\nðŸŽ‰ All basic monadic pipe features working!")
    42
    
  # Regular function - receives unwrapped value, returns regular value
  def double(x: Int): Int =
    x * 2
    
  # Result-returning function - receives unwrapped value, returns Result
  def safe_increment(x: Int) =
    ok(x + 1)
end