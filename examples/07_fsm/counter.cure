# Cure Language - FSM Counter Example
# Demonstrates finite state machine with counter logic

module FsmCounter do
  export [main/0]
  
  # Simple Counter FSM
  # States: idle, counting(value)
  # Events: start, increment, decrement, reset, stop
  fsm Counter do
    state idle do
      on start -> counting(0)
    end
    
    state counting(value: Int) do
      on increment -> counting(value + 1)
      on decrement when value > 0 -> counting(value - 1)
      on decrement when value <= 0 -> counting(0)
      on reset -> counting(0)
      on stop -> idle
    end
  end
  
  # Bounded Counter FSM - won't exceed max value
  fsm BoundedCounter do
    state idle do
      on start -> counting(0)
    end
    
    state counting(value: Int) do
      on increment when value < 100 -> counting(value + 1)
      on increment when value >= 100 -> counting(100)
      on decrement when value > 0 -> counting(value - 1)
      on reset -> counting(0)
      on stop -> idle
    end
  end
  
  # Up-Down Counter with direction
  fsm UpDownCounter do
    state idle do
      on start_up -> counting_up(0)
      on start_down -> counting_down(0)
    end
    
    state counting_up(value: Int) do
      on tick -> counting_up(value + 1)
      on switch -> counting_down(value)
      on stop -> idle
    end
    
    state counting_down(value: Int) do
      on tick when value > 0 -> counting_down(value - 1)
      on tick when value <= 0 -> counting_down(0)
      on switch -> counting_up(value)
      on stop -> idle
    end
  end
  
  # Timer FSM with timeout
  fsm Timer do
    state idle do
      on start(duration: Int) -> running(duration, 0)
    end
    
    state running(total: Int, elapsed: Int) do
      on tick -> 
        match elapsed + 1 >= total do
          true -> finished
          false -> running(total, elapsed + 1)
        end
      on cancel -> idle
    end
    
    state finished do
      on reset -> idle
    end
  end
  
  def main(): Int do
    # FSMs are typically spawned and controlled via messages
    # This demonstrates the FSM definitions
    0
  end
end
