# FSM Guards Demo - Demonstrates FSM transitions with when clauses
# This shows the newly implemented parser support for guard conditions

module FSMGuardsDemo do
  export [main/0]
  
  # Counter FSM with guard conditions
  fsm SmartCounter do
    states: [Zero, Positive, Negative]
    initial: Zero
    
    state Zero do
      event(:increment) -> Positive
      event(:decrement) -> Negative
      event(:reset) -> Zero
    end
    
    state Positive do
      event(:increment) -> Positive
      event(:decrement) when count > 1 -> Positive
      event(:decrement) when count == 1 -> Zero
      event(:decrement) when count < 1 -> Negative
      event(:reset) -> Zero
    end
    
    state Negative do
      event(:increment) when count < -1 -> Negative
      event(:increment) when count == -1 -> Zero
      event(:increment) when count > -1 -> Positive
      event(:decrement) -> Negative
      event(:reset) -> Zero
    end
  end

  def main(): Int =
    0
end