def test_literal_patterns(x) = match x do
  0 -> "zero"
  42 -> "answer"
  _ -> "other number"
end

def test_constructor_patterns(result) = match result do
  Ok(value) -> value * 2
  Error(msg) -> -1
  _ -> 0
end

def test_nested_patterns(data) = match data do
  Ok(Ok(x)) -> x + 100
  Ok(Error(msg)) -> -50
  Error(_) -> -100
  _ -> 0
end

def test_wildcard_binding(result) = match result do
  Ok(_) -> "got ok"
  Error(_) -> "got error"
  _ -> "unknown"
end

def test_complex_clause_bodies(result) = match result do
  Ok(value) -> 
    let doubled = value * 2
    let message = "Result: " ++ int_to_string(doubled)
    println(message)
    doubled
  Error(reason) ->
    let error_msg = "Error occurred: " ++ reason
    println(error_msg)
    0
  _ ->
    println("Unknown result type")
    -1
end