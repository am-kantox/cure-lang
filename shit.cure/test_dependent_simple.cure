module DependentTypes do
  export [demo_all/0]

  # Simple function
  def make_vec3(x: Float, y: Float, z: Float): Vector(Float, 3) =
    [x, y, z]

  # Problematic function - multiline with pipe operator
  def dot_product(v1: Vector(Float, n), v2: Vector(Float, n)): Float =
    zip_with(v1, v2, fn(x, y) -> x * y end)
    |> fold(0.0, fn(x, acc) -> acc + x end)

  record Matrix(rows: Nat, cols: Nat, T) do
    data: Vector(Vector(T, cols), rows)
  end

end